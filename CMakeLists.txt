cmake_minimum_required(VERSION 3.4.1)
project(pinocchio)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(PINOCCHIO_PRODUCT_NUMBER  2)
set(PINOCCHIO_PRODUCT_VERSION 0)
set(PINOCCHIO_BUILD_NUMBER    0)

if (CMAKE_VERSION VERSION_LESS 2.8.5)
    set(CMAKE_INSTALL_BINDIR "bin" CACHE STRING "User executables (bin)")
    set(CMAKE_INSTALL_LIBDIR "lib${LIB_SUFFIX}" CACHE STRING "Object code libraries (lib)")
    set(CMAKE_INSTALL_INCLUDEDIR "include" CACHE STRING "C header files (include)")
    mark_as_advanced(CMAKE_INSTALL_BINDIR CMAKE_INSTALL_LIBDIR CMAKE_INSTALL_INCLUDEDIR)
else ()
    include(GNUInstallDirs)
endif ()

if (MSVC)
    set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} /SUBSYSTEM:CONSOLE /IGNORE:4099")
    if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
        set(CMAKE_CFLAGS "${CMAKE_CFLAGS} /MDd /bigobj")
    else ()
        add_compile_options(/bigobj)
    endif ()
    add_definitions(/wd4267)
    add_definitions(/wd4250)
    add_definitions(/wd4996)
    add_definitions(/wd4334)

    add_definitions(-DBOTAN_BUILD_COMPILER_IS_GCC)
    add_definitions(-DBOTAN_TARGET_OS_HAS_STL_FILESYSTEM_MSVC)
    add_definitions(-DBOTAN_TARGET_OS_HAS_FILESYSTEM)
elseif (CMAKE_COMPILER_IS_GNUCXX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -pedantic -Wp,-w -Wa,-mbig-obj")
    set(CMAKE_CFLAGS "${CMAKE_CFLAGS} -pedantic -Wp,-w -Wa,-mbig-obj")
else ()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -pedantic -Wp,-w")
    set(CMAKE_CFLAGS "${CMAKE_CFLAGS} -pedantic -Wp,-w")
endif ()

if (WIN32)
    add_definitions(-D_CRT_SECURE_NO_WARNINGS=1)
    add_definitions(-DBOTAN_BUILD_COMPILER_IS_GCC)
    add_definitions(-DBOTAN_TARGET_OS_HAS_STL_FILESYSTEM_MSVC)
    add_definitions(-DBOTAN_TARGET_OS_HAS_FILESYSTEM)
    add_definitions(-DUSE_STATIC -DBOTAN_DLL=)

    add_subdirectory(3rdparty/botan)
    include_directories(3rdparty/botan)
    include_directories(3rdparty/botan/external)
elseif (APPLE)
    link_directories(/usr/local/Cellar/botan/2.1.0/lib)
    set(CRYPTO_LIBRARIES botan-2)
    set(CRYPTO_INCLUDE_DIR
            /usr/local/Cellar/botan/2.1.0/include/botan-2)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -Wno-deprecated-declarations -Wpessimizing-move")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Wno-deprecated-declarations -Wpessimizing-move")
    target_link_libraries(${CMAKE_PROJECT_NAME} "-framework Security")
    target_link_libraries(${CMAKE_PROJECT_NAME}_tests "-framework Security")
else ()
    find_package(Botan REQUIRED)
endif (WIN32)


include_directories(3rdparty/sqlite)
include_directories(src/main)
include_directories(3rdparty/gtest/googletest/include)
include_directories(3rdparty/mongoose)
include_directories(3rdparty/json)
include_directories(${CRYPTO_INCLUDE_DIR})

add_subdirectory(3rdparty/gtest/googletest)
add_subdirectory(3rdparty/sqlite)

enable_testing()
if (BUILD_TESTING)
    add_subdirectory(src_c/tests)
endif ()

file(COPY
        ${CMAKE_SOURCE_DIR}/test_data/request_body.txt
        DESTINATION
        ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/test_data)
